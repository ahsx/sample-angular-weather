APPNAME = 'WeatherApp';

angular
	.module(APPNAME, ['ui.router', 'ngAnimate'])
	.run(['$rootScope', '$state', '$stateParams', function ($rootScope,   $state,   $stateParams) 
	{
		// It's very handy to add references to $state and $stateParams to the $rootScope
		// so that you can access them from any scope within your applications.For example,
		// <li ng-class="{ active: $state.includes('contacts.list') }"> will set the <li>
		// to active whenever 'contacts.list' or one of its decendents is active.
		$rootScope.$state = $state;
		$rootScope.$stateParams = $stateParams;
	}])
;

// 
// 	Keys mapping
// 
function Keyboard(){}
Keyboard.keys = [];

Keyboard.keys[13] = "enter";
Keyboard.keys[8] = "backspace";
Keyboard.keys[9] = "tab";
Keyboard.keys[13] = "enter";		
Keyboard.keys[16] = "shift";		
Keyboard.keys[17] = "ctrl";		
Keyboard.keys[18] = "alt";
Keyboard.keys[19] = "pause";	
Keyboard.keys[20] = "capslock"	
Keyboard.keys[27] = "escape";		
Keyboard.keys[32] = "space";		
Keyboard.keys[33] = "pageup";		
Keyboard.keys[34] = "pagedown";	
Keyboard.keys[35] = "end";
Keyboard.keys[36] = "home";		
Keyboard.keys[37] = "leftarrow"; 	
Keyboard.keys[38] = "uparrow"; 	
Keyboard.keys[39] = "rightarrow"; 	
Keyboard.keys[40] = "downarrow";	
Keyboard.keys[45] = "insert";		
Keyboard.keys[46] = "delete";		

Keyboard.keys[48] = "0";
Keyboard.keys[49] = "1";
Keyboard.keys[50] = "2";
Keyboard.keys[51] = "3";
Keyboard.keys[52] = "4";
Keyboard.keys[53] = "5";
Keyboard.keys[54] = "6";
Keyboard.keys[55] = "7";
Keyboard.keys[56] = "8";
Keyboard.keys[57] = "9";

Keyboard.keys[65] = "a";
Keyboard.keys[66] = "b";
Keyboard.keys[67] = "c";
Keyboard.keys[68] = "d";
Keyboard.keys[69] = "e";
Keyboard.keys[70] = "f";
Keyboard.keys[71] = "g";
Keyboard.keys[72] = "h";
Keyboard.keys[73] = "i";
Keyboard.keys[74] = "j";
Keyboard.keys[75] = "k";
Keyboard.keys[76] = "l";
Keyboard.keys[77] = "m";
Keyboard.keys[78] = "n";
Keyboard.keys[79] = "o";
Keyboard.keys[80] = "p";
Keyboard.keys[81] = "q";
Keyboard.keys[82] = "r";
Keyboard.keys[83] = "s";
Keyboard.keys[84] = "t";
Keyboard.keys[85] = "u";
Keyboard.keys[86] = "v";
Keyboard.keys[87] = "w";
Keyboard.keys[88] = "x";
Keyboard.keys[89] = "y";
Keyboard.keys[90] = "z";

Keyboard.keys[97] = "a"; 
Keyboard.keys[98] = "b"; 
Keyboard.keys[99] = "c"; 
Keyboard.keys[100] = "d"; 
Keyboard.keys[101] = "e"; 
Keyboard.keys[102] = "f"; 
Keyboard.keys[103] = "g"; 
Keyboard.keys[104] = "h"; 
Keyboard.keys[105] = "i"; 
Keyboard.keys[106] = "j"; 
Keyboard.keys[107] = "k"; 
Keyboard.keys[108] = "l"; 
Keyboard.keys[109] = "m"; 
Keyboard.keys[110] = "n"; 
Keyboard.keys[111] = "o"; 
Keyboard.keys[112] = "p"; 
Keyboard.keys[113] = "q"; 
Keyboard.keys[114] = "r"; 
Keyboard.keys[115] = "s"; 
Keyboard.keys[116] = "t"; 
Keyboard.keys[117] = "u"; 
Keyboard.keys[118] = "v"; 
Keyboard.keys[119] = "w"; 
Keyboard.keys[120] = "x"; 
Keyboard.keys[121] = "y"; 
Keyboard.keys[122] = "z"; 

/**
 *	Find the caracter associated with a key code
 *
 *	@param code int
 *	@return String
 **/
Keyboard.find = function( code )
{
	return Keyboard.keys[code];
}

/**
 *	Is the given key code associated with a letter
 *
 *	@param code int
 *	@return Boolean
 **/
Keyboard.isLetter = function( code )
{
	return ( (code >= 65 &&  code <= 90) || (code >=97 && code <= 122) )
}

"use strict";

angular
	.module(APPNAME)
	.config(['$stateProvider', '$urlRouterProvider', function($stateProvider, $urlRouterProvider) {

		$urlRouterProvider
			.otherwise("/");

		$stateProvider

			////////////////// 
			// 		top 	//
			//////////////////
			.state('top', {
				name: 'top',
				url: '/',
				controller: 'PaneController',
				templateUrl: '/sample-angular-weather/statics/partials/pane.html'
			})

			////////////////// 
			// 		right 	//
			//////////////////
			.state('right', {
				name: 'right',
				url: '/right',
				controller: 'PaneController',
				templateUrl: '/sample-angular-weather/statics/partials/pane.html'
			})
			
			////////////////// 
			// 		bottom 	//
			//////////////////
			.state('bottom', {
				name: 'bottom',
				url: '/bottom',
				controller: 'PaneController',
				templateUrl: '/sample-angular-weather/statics/partials/pane.html'
			})
			
			////////////////// 
			// 		left 	//
			//////////////////
			.state('left', {
				name: 'left',
				url: '/left',
				controller: 'PaneController',
				templateUrl: '/sample-angular-weather/statics/partials/pane.html'
			})
	}]);
angular
	.module(APPNAME)
	.animation('.result', [function(){
		return {

			enter: function (element, done)
			{
				var childs = jQuery(element).find('li');
				childs.css('opacity',0);
				TweenMax.staggerTo( childs, 1, {opacity:1, x:-10, onComplete:done}, .1)

			    // optional onDone or onCancel callback
			    // function to handle any post-animation
			    // cleanup operations
			    return function(isCancelled) 
			    {
			      if(isCancelled) 
			      {
			        jQuery(element).stop();
			      }
			    }
			},

		    leave: function( element, done)
		    {
		    	console.log('FadeLeave', element.eq(0));
		    	
		    	var childs = jQuery(element).find('li');
				childs.css('opacity', 1);
				TweenMax.staggerTo( childs, .3, {opacity:0, x:10, onComplete:done}, .1)


			    // optional onDone or onCancel callback
			    // function to handle any post-animation
			    // cleanup operations
			    return function(isCancelled) {
			      if(isCancelled) {
			        jQuery(element).stop();
			      }
			    }
		    },

		    addClass: function()
		    {
		    	console.log('Fade addClass');
		    },
		  };
	}]);
"use strict";

angular
	.module( APPNAME )
	.controller('AppController', ['$scope', '$state', function( $scope, $state )
	{	
		var states = ['top', 'right', 'bottom', 'left'];
		var n = states.length;
		var current = next();

		function next()
		{
			var i = -1;
			if ( current != undefined )
				i = states.indexOf( current );
			var j = i;

			while ( j == i )
			{
				j = (Math.random()*n | 0);
			}

			return states[j];
		}

		function go( state )
		{
			$state.go(state, {}, {
				reload: true,
				location: false
			});
		}

		go( current );
		
		$scope.$on('shift', function(e)
		{
			current = next();
			go( current );
		});
		
	}]);
;
"use strict";

angular
	.module(APPNAME)
	.controller('PaneController', ['$scope', '$state', '$rootScope', 'City', 'WeatherService', function( $scope, $state, $rootScope, City, WeatherService )
	{
		
		var transitions = ['slide-top', 'slide-right', 'slide-bottom', 'slide-left'];
		var m = transitions.length;

		$scope.city = City.reset();
		$scope.country = '';
		$scope.validated = false;
		$scope.loading = false;
		$scope.loaded = false;
		$scope.error = false;
		$rootScope.color = $scope.color = getColor();
		$scope.transition = transitions[ Math.random()*m | 0 ];

		$scope.temperature = '15째 - 17째';
		$scope.humidity = '35';
		$scope.pressure = '1024';
		$scope.location = '50.85, 4.35';
		$scope.sunrise = '05:48:31 GMT';
		$scope.sunset = '05:48:31 GMT';

		$scope.$on('keypress', function( event, keyEvent )
		{
			var code = keyEvent.which;

			console.log('KeyCode: %d [%s]', code, Keyboard.find(code) );

			if ( $scope.validated )
			{
				console.log('validated have to have a new pane');
				console.warn('Shift to another pane');
				$rootScope.$broadcast('shift');

			}
			else if ( Keyboard.isLetter(code) )
			{
				$scope.$apply(function()
				{
					$scope.city = City.add( Keyboard.find(code) );
				});
			}
			else
			{
				switch ( Keyboard.find(code) )
				{
					case 'backspace':
						keyEvent.preventDefault();
						$scope.$apply(function()
						{
							$scope.city = City.remove( 1 );
						});
						break;
					case 'space':
						$scope.$apply(function()
						{
							$scope.city = City.add(' ');
						});
						break;
					case 'enter':

						if ( $scope.city.length > 1 )
						{
							$scope.$apply(function()
							{
								$scope.validated = true;
								$scope.loading = true;
							});

							getWeather();
						}
						break;

					// case 'shift':
					// 	console.warn('Shift to another pane');
					// 	$rootScope.$broadcast('shift');
					// 	break;
						
					// case 'alt':
					// 	$scope.$apply(function()
					// 	{
					// 		$scope.loaded = !$scope.loaded;
					// 	});
					// 	break;
				}
			}

			function getWeather()
			{
				WeatherService
					.fetchForCity( $scope.city )
					.then(function(data)
					{
						console.log('Data retrieved', data);

						$scope.loading = false;
						if (data.cod && data.cod == 404)
						{
							$scope.error = true;
							return;
						}

						var min = (data.main.temp_min-32) * 5 / 9;
						var max = (data.main.temp_max-32) * 5 / 9;

						$scope.temperature = data.main.temp_min + '째 - ' + data.main.temp_max + '째';
						$scope.humidity = data.main.humidity;
						$scope.pressure = data.main.pressure;
						$scope.location = data.coord.lat + ', ' + data.coord.lon;
						$scope.sunrise = new Date(data.sys.sunrise);
						$scope.sunset = new Date(data.sys.sunset);
						$scope.country = data.sys.country;

						$scope.loaded = true;
					})

			}

		});	
		
		/**
		 *	Find the new color
		 *
		 *	@return String
		 **/
		function getColor()
		{
			var colors = ['bittersweet', 'persiangreen', 'mantis', 'buttercup'];
			var n = colors.length;

			var i = colors.indexOf( $rootScope.color );
			var j = i;

			while ( i == j )
			{
				j = Math.random()*n | 0;
			}

			return colors[ j ];
		}
	}]);
angular
	.module( APPNAME )
	.directive('icon', [function(){
		// Runs during compile
		return {
			// name: '',
			// priority: 1,
			// terminal: true,
			scope: {}, // {} = isolate, true = child, false/undefined = no change
			controller: function($scope, $element, $attrs, $transclude) 
			{
				$scope.label = $attrs.label;
				$scope.href = '#' + $attrs.label;
				$scope.width = $attrs.width || 32;
				$scope.height = $attrs.height || 32;

			},
			// require: 'ngModel', // Array = multiple requires, ? = optional, ^ = check parent elements
			restrict: 'E', // E = Element, A = Attribute, C = Class, M = Comment
			// template: '',
			templateUrl: '/sample-angular-weather/statics/partials/icon-directive.html',
			// replace: true,
			// transclude: true,
			// compile: function(tElement, tAttrs, function transclude(function(scope, cloneLinkingFn){ return function linking(scope, elm, attrs){}})),
			link: function($scope, iElm, iAttrs, controller) {
				
			}
		};
	}]);
angular
	.module(APPNAME)
	.directive('keyUp', ['$document', '$rootScope', function($document, $rootScope){
		// Runs during compile
		return {
			// name: '',
			// priority: 1,
			// terminal: true,
			// scope: {}, // {} = isolate, true = child, false/undefined = no change
			// controller: function($scope, $element, $attrs, $transclude) {},
			// require: 'ngModel', // Array = multiple requires, ? = optional, ^ = check parent elements
			// restrict: 'A', // E = Element, A = Attribute, C = Class, M = Comment
			// template: '',
			// templateUrl: '',
			// replace: true,
			// transclude: true,
			// compile: function(tElement, tAttrs, function transclude(function(scope, cloneLinkingFn){ return function linking(scope, elm, attrs){}})),
			link: function($scope, iElm, iAttrs, controller) 
			{
				$document.bind('keydown', function(e)
				{
					$rootScope.$broadcast('keypress', e);
				})	
			}
		};
	}])
;	
"use strict";

/**
* SVG Collection directive
*
* Description
*/
angular
	.module( APPNAME )
	.directive('sprite', [function(){
		// Runs during compile
		return {
			// name: '',
			// priority: 1,
			// terminal: true,
			// scope: {}, // {} = isolate, true = child, false/undefined = no change
			// controller: function($scope, $element, $attrs, $transclude) {},
			// require: 'ngModel', // Array = multiple requires, ? = optional, ^ = check parent elements
			restrict: 'E', // E = Element, A = Attribute, C = Class, M = Comment
			// template: '',
			templateUrl: '/sample-angular-weather/statics/partials/svg-sprite.html',
			// replace: true,
			// transclude: true,
			// compile: function(tElement, tAttrs, function transclude(function(scope, cloneLinkingFn){ return function linking(scope, elm, attrs){}})),
			link: function($scope, iElm, iAttrs, controller) {
				
			}
		};
	}]);
angular
	.module(APPNAME)
	.directive('fade', ['$animate', function($animate)
	{
		// Runs during compile
		return {
			// name: '',
			// priority: 1,
			// terminal: true,
			scope: true, // {} = isolate, true = child, false/undefined = no change
			controller: function($scope, $element, $attrs, $transclude) 
			{
				$scope.$watch($attrs.fade, function(newVal)
				{
					if ( newVal )
						$animate.addClass($element, 'fade')
					else
						$animate.removeClass($element, 'fade')
				})
			},
			// require: 'ngModel', // Array = multiple requires, ? = optional, ^ = check parent elements
			restrict: 'A', // E = Element, A = Attribute, C = Class, M = Comment
			// template: '',
			// templateUrl: '',
			// replace: true,
			// transclude: true,
			// compile: function(tElement, tAttrs, function transclude(function(scope, cloneLinkingFn){ return function linking(scope, elm, attrs){}})),
			link: function($scope, iElm, iAttrs, controller) {
				
			}
		};
	}]);
angular
	.module(APPNAME)
	.service('City', function()
	{

		/**
		 *	Default city name
		 **/
		this.text = '';
		// this.text = 'Llanfairpwllgwyngyll';

		/**
		 *	Max characters allowed
		 **/
		this.max = 20;

		/**
		 *	Add character to the city name
		 *
		 *	@param character String
		 *	@return String
		 **/
		this.add = function( character )
		{
			if ( this.text.length < this.max )
				this.text += character;

			return this.text;
		};

		/**
		 *	Remove a qty of character
		 *
		 *	@param qty int
		 *	@return String
		 **/
		this.remove = function( qty )
		{
			// console.log('remove %s - %d', this.text, qty);

			var qty = Math.min( this.text.length, qty );
			this.text = this.text.substr( 0, this.text.length-qty );

			// console.log('result %s', this.text);

			return this.text;
		};

		/**
		 *	Reset the city to default values
		 *
		 *	@return String
		 **/
		this.reset = function()
		{
			this.text = '';

			return this.text;
		};
	})
;
angular
	.module( APPNAME )
	.service('WeatherService', ['$http', function($http){
		
		this.fetchForCity = function( city )
		{
			var url = "http://api.openweathermap.org/data/2.5/weather";

			return $http({
				method: 'JSONP',
				url: url,
				params: {
					q: city,
					units: 'metric',
					callback: 'JSON_CALLBACK'
				}
			})
			.then(function(data)
			{
				return data.data;
			})
			.catch(function(err)
			{
				console.error('Error in weather fecth', err);
			});
		}


	}])